# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: golang:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

#services:
#  - name: mongo:4.4.14
#    alias: mongo
#    command: ["mongod", "--logpath=/dev/null", "--bind_ip_all", "--port=8230"]

services:
  - name: mongo:latest
    command:
      [
        "/bin/sh",
        "-c",
        "mongod --logpath /dev/null --bind_ip_all --port=8230"
      ]


variables:
  MONGO_URI: 'mongodb://127.0.0.1:8230/chess-test'
  NODE_ENV: 'test'
  GIT_STRATEGY: clone
  CI_DEBUG_TRACE: "true"

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - cd web
    - export PATH=$PATH:/nfs/chess/sw/chessdata/go/bin
    - make
    - echo "Compile complete."
  tags:
    - shell

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - ps auxww | grep mongod
    - cd web
    - export PATH=$PATH:/nfs/chess/sw/chessdata/go/bin
    - sed -i -e "s,meta,MetaTest,g" server_test.go
    - cat server_test.json
    - make testdb
    - make test_code
  tags:
    - shell

#lint-test-job:   # This job also runs in the test stage.
#  stage: test    # It can run at the same time as unit-test-job (in parallel).
#  script:
#    - echo "Linting code... This will take about 10 seconds."
#    - sleep 10
#    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  tags:
    - shell
